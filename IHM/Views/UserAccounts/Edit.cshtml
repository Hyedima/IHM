@model IHM.Models.UserAccount

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="col-lg-12">
    <div class="card">
        <div class="card-header">
            <i class="fa fa-align-justify"></i> Users Profile
        </div>
        <div class="card-body">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="dl-horizontal">
                    <h4>UserAccount</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.UserID)
                    @Html.HiddenFor(model => model.IsActive)
                    @Html.HiddenFor(model => model.Password)
                    @Html.HiddenFor(model => model.photo)
                  
                    <div class="form-group row">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.OtherNames, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.OtherNames, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OtherNames, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-8">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", ReadOnly = "" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.UserType, new { htmlAttributes = new { @class = "form-control", ReadOnly = "" } })
                            @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AccountType, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.AccountType, new { htmlAttributes = new { @class = "form-control", ReadOnly="" } })
                            @Html.ValidationMessageFor(model => model.AccountType, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.DateRegistered, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DateRegistered, new { htmlAttributes = new { @class = "form-control", ReadOnly = "" } })
                            @Html.ValidationMessageFor(model => model.DateRegistered, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                            @Html.TextArea("Address", Model.Address, new { @class = "form-control" })
                            
                           @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.About, htmlAttributes: new { @class = "control-label" })
                            @Html.TextArea("About", Model.About, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class=" col-md-12">
                            <input type="submit" value="Save Changes" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
